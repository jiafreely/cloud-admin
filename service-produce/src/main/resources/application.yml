server:
  port: 8110 #服务端口
  tomcat:
    max-threads: 200 #tomcat的最大并发值修改为10,默认是200
spring:
#  profiles:
#    active: dev # 环境设置
  application:
    name: service-produce # 服务名
  datasource: # mysql数据库连接
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/service_produce?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai
    username: admin
    password: admin
#spring:
  jackson: #返回json的全局时间格式,默认情况下json时间格式带有时区，并且是世界标准时间，和我们的时间差了八个小时
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  #spring:
  cloud:
#    alibaba:
#      seata:
#        tx-service-group: my_test_tx_group
    nacos:
      discovery:
        server-addr: localhost:8848 # nacos服务地址
    sentinel:
      transport:
        port: 8081 #跟控制台交流的端口，随意指定一个未使用的端口即可
        dashboard: localhost:8080 # 指定控制台服务的地址
seata:
  tx-service-group: my_test_tx_group   #这里要特别注意和nacos中配置的要保持一直
  config:
    type: nacos
    nacos:
      #namespace:  #2.2中配置所在命名空间ID，入未配置 默认public空间
      server-addr: 127.0.0.1:8848
      group: SEATA_GROUP
      userName: nacos
      password: nacos
  registry:
    type: nacos
    nacos:
      application: seata-server
      server-addr: 127.0.0.1:8848
      #namespace:    #2.2中配置所在命名空间ID，入未配置 默认public空间
      userName: nacos
      password: nacos
  service:
    vgroup-mapping:
      my_test_tx_group: default    #这里要特别注意和nacos中配置的要保持一直
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath:com/cloud/service/mapper/xml/*.xml
#配置负载均衡策略的方式
service-oss: # 调用的提供者的名称
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
#配置ribbon的超时时间（因为OpenFeing的底层即是对ribbon的封装）
ribbon:
  MaxAutoRetries: 0 # 同一实例最大重试次数，不包括首次调用，默认0
  MaxAutoRetriesNextServer: 1 # 重试其他实例的最大重试次数，不包括首次所选的server，默认1
  ConnectTimeout: 10000 #连接建立的超时时长，默认1秒
  ReadTimeout: 10000 #处理请求的超时时间，默认为1秒
feign:
  sentinel:
    enabled: true